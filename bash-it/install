#!/bin/bash
#
# Bash it
#
# This install Bash-it, the community bash framework.

set -euf -o pipefail

my_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo -en "\e[36mInstalling Bash-It...\e[39m "

bashit_dir="${HOME}/.bash_it"

pushd "${bashit_dir}" > /dev/null
(git pull || git clone https://github.com/Bash-it/bash-it.git .) > /dev/null

  # the install script sometimes fails for reasons outside of our control,
  # in ways that doesn't affect the rest of the process, but would trigger the
  # pipefail option (yes would receive the bad signal from ./install.sh and fail
  set +o pipefail
  yes | ./install.sh > /dev/null 2>&1
  set -o pipefail
popd > /dev/null

set +u

set +ef
# Shellcheck does not like following non-constant source.
# shellcheck disable=SC1090
source "${HOME}/.bash_profile" > /dev/null 2>&1
set -e

completions_file="${my_dir}/completions"
while read -r completion; do
  [[ -z "${completion}" ]] && continue

  bash-it enable completion "${completion}" > /dev/null
done < "${completions_file}"

aliases_file="${my_dir}/aliases"
while read -r alias; do
  [[ -z "${alias}" ]] && continue

  bash-it enable alias "${alias}" > /dev/null
done < "${aliases_file}"

plugins_file="${my_dir}/plugins"
while read -r plugin; do
  [[ -z "${plugin}" ]] && continue

  bash-it enable plugin "${plugin}" > /dev/null
done < "${plugins_file}"
echo -e "\e[32mdone\e[39m"

echo -en "\e[36mInstalling custom .inputrc...\e[39m "
rm -rf "${HOME}/.inputrc"
ln -s "${my_dir}/.inputrc" "${HOME}/.inputrc"
echo -e "\e[32mdone\e[39m"

echo -en "\e[36mInstalling custom bash scripts...\e[39m "
# TODO: use find or ls rather than glob
rm "${HOME}/.bash_it/custom/"*
cp "${my_dir}/custom/"* "${HOME}/.bash_it/custom/"
echo -e "\e[32mdone\e[39m"
